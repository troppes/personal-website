kind: pipeline
type: docker
name: test

steps:
  - name: run tests
    image: alpine
    commands:
      - apk add --update nodejs yarn
      - yarn install
      - yarn run tsc
      - yarn run eslint
---

kind: pipeline
type: docker
name: build
depends_on:
  - test

trigger:
  branch:
    - main

steps:
  - name: build project
    image: alpine
    environment:
      BACKEND_URL:
        from_secret: BACKEND_URL
      ASSETS_URL:
        from_secret: ASSETS_URL
      ACCESS_TOKEN:
        from_secret: ACCESS_TOKEN
      LIGHTGALLERY_KEY:
        from_secret: LIGHTGALLERY_KEY
    commands:
      - echo "VITE_APP_BACKEND_URL=$BACKEND_URL " >> .env.local
      - echo "VITE_APP_EXTERNAL_ASSETS_URL=$ASSETS_URL" >> .env.local
      - echo "VITE_APP_ACCESS_TOKEN=$ACCESS_TOKEN" >> .env.local
      - echo "VITE_APP_LIGHTGALLERY_KEY=$LIGHTGALLERY_KEY" >> .env.local
      - apk add --update nodejs yarn
      - yarn install
      - yarn run build

  - name: build container
    image: plugins/docker
    settings:
      username:
        from_secret: docker_user
      password:
        from_secret: docker_pw
      repo: floreitz/website
      tags: latest

---

kind: pipeline
type: ssh
name: deploy

clone:
  disable: true

trigger:
  branch:
    - main

depends_on:
  - test
  - build

server:
  host:
    from_secret: host
  user: deploy
  password:
    from_secret: password

steps:
  - name: deploy
    commands:
      - cd /srv/docker/
      - sudo docker-compose pull website
      - sudo docker-compose up -d
